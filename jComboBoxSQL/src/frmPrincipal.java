
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Gustavo Moretti
 */
public class frmPrincipal extends javax.swing.JFrame {

    ConnectionFactory conecta = new ConnectionFactory();    //  variável global
    
    /**
     * Creates new form frmPrincipal
     */
    public frmPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton_conecta = new javax.swing.JButton();
        jButton_desconecta = new javax.swing.JButton();
        jButton_fechar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton_select = new javax.swing.JButton();
        jButton_insert = new javax.swing.JButton();
        jButton_update = new javax.swing.JButton();
        jButton_delete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton_createTable = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton_conecta.setText("Conecta SQL");
        jButton_conecta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_conectaActionPerformed(evt);
            }
        });

        jButton_desconecta.setText("Desconecta SQL");
        jButton_desconecta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_desconectaActionPerformed(evt);
            }
        });

        jButton_fechar.setText("Fechar");
        jButton_fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_fecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_conecta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_desconecta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_fechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton_conecta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_desconecta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_fechar)
                .addGap(19, 19, 19))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setBackground(new java.awt.Color(255, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Exemplos de queries");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setOpaque(true);

        jButton_select.setText("SELECT");
        jButton_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_selectActionPerformed(evt);
            }
        });

        jButton_insert.setText("INSERT");
        jButton_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_insertActionPerformed(evt);
            }
        });

        jButton_update.setText("UPDATE");
        jButton_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_updateActionPerformed(evt);
            }
        });

        jButton_delete.setText("DELETE");
        jButton_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_deleteActionPerformed(evt);
            }
        });

        jLabel2.setText("Analise o código que está associado ao evento ");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setText("Action -> ActionPerformed dos botões abaixo:");

        jButton_createTable.setBackground(new java.awt.Color(255, 204, 102));
        jButton_createTable.setText("CREATE TABLE");
        jButton_createTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_createTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton_select, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_insert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_createTable, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_select)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_insert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_update)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_delete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_createTable)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(565, 385));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_conectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_conectaActionPerformed
        
        // efetua a conexão com o servidor SQL                
        conecta.conexao();               
        
    }//GEN-LAST:event_jButton_conectaActionPerformed

    private void jButton_desconectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_desconectaActionPerformed
        
        // fecha a conexão com o servidor SQL        
        conecta.desconecta();               
        
    }//GEN-LAST:event_jButton_desconectaActionPerformed

    private void jButton_fecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_fecharActionPerformed
        
        // fecha o aplicativo
        System.exit(0);        
        
    }//GEN-LAST:event_jButton_fecharActionPerformed

    private void jButton_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_selectActionPerformed
        
        // pega a conexão e o Statement
        Connection conn = new ConnectionFactory().conexao();
        
        String sql = "Select * from paises ORDER BY nomepais";      
        
        try {
            PreparedStatement comando = conn.prepareStatement(sql);           
            
            // executa um select
            ResultSet rs;
        
            rs = comando.executeQuery();
            
            while (rs.next()) {
                // inserir os comandos para ler os dados aqui !
                // String nome = rs.getString("nome");
                // String email = rs.getString("email")
            }

        rs.close();       // fecha o Recordset
        comando.close();  // fecha o Statement
        conn.close();     // fecha a conexão com o banco de dados                            
            
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar os registros !\nERRO: " + ex.getMessage());  //  exibe uma caixa de mensagem
        }             

    }//GEN-LAST:event_jButton_selectActionPerformed

    private void jButton_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_insertActionPerformed
        
        // Exemplo de query para realizar um INSERT
        
        Connection conn = new ConnectionFactory().conexao();  // solicita uma conexão com o banco de dados
        
        String nome =  "José da Silva";
        String email = "jsilva@gmail.com";                

        String sql = "INSERT INTO Cliente ( nome , email ) VALUES (? , ?)";
                
        try {
                        
            PreparedStatement comando = conn.prepareStatement(sql);           
            
            // adicionando as entradas do usuários no comando
            // o processo de sanitização ocorre aqui
            comando.setString(1,nome);
            comando.setString(2,email);
        
            comando.execute();   
            
            comando.close(); // fecha o Statement            
            conn.close();    // fecha a conexão com o banco de dados
            
            JOptionPane.showMessageDialog(null, "Registro inserido !");  //  exibe uma caixa de mensagem
                        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao inserir o registro !\nERRO: " + ex.getMessage());  //  exibe uma caixa de mensagem
        }               
               
        
    }//GEN-LAST:event_jButton_insertActionPerformed

    private void jButton_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_deleteActionPerformed
        
        // Exemplo de query para realizar um DELETE
        
        Connection conn = new ConnectionFactory().conexao();  // solicita uma conexão com o banco de dados            
        
        String sql = "DELETE Cliente WHERE id=?";               
                
        try {                        
        
            PreparedStatement comando = conn.prepareStatement(sql);           
                        
            comando.setLong(1, 105);  // ou ler o campo que armazena o Id (código) do cliente
            comando.execute();   
                                    
            comando.close(); // fecha o Statement            
            conn.close();    // fecha a conexão com o banco de dados
            
            JOptionPane.showMessageDialog(null, "Registro removido !");  //  exibe uma caixa de mensagem
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao remover o registro !\nERRO: " + ex.getMessage());  //  exibe uma caixa de mensagem
        }          
                
    }//GEN-LAST:event_jButton_deleteActionPerformed

    private void jButton_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_updateActionPerformed
        
        // Exemplo de query para realizar um UPDATE
        
        Connection conn = new ConnectionFactory().conexao();  // solicita uma conexão com o banco de dados
        
        String sql = "Update contatos set nome=?, email=?, endereco=?, dataNascimento=? where id=?";
                
        try {
                        
            PreparedStatement comando = conn.prepareStatement(sql);           
            
            // o nome contato refere-se a um objeto, mas você pode ler diretamente um campo texto !
            /*
            comando.setString(1, contato.getNome());
            comando.setString(2, contato.getEmail());
            comando.setString(3, contato.getEndereco());
            comando.setDate(4, new Date(contato.getDataNascimento().getTimeInMillis()));
            comando.setLong(5, contato.getId());
            */
            
            comando.execute();   
            
            comando.close(); // fecha o Statement            
            conn.close();    // fecha a conexão com o banco de dados
            
            JOptionPane.showMessageDialog(null, "Registro atualizado !");  //  exibe uma caixa de mensagem
                        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar o registro !\nERRO: " + ex.getMessage());  //  exibe uma caixa de mensagem
        }               
               
        
        
    }//GEN-LAST:event_jButton_updateActionPerformed

    private void jButton_createTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_createTableActionPerformed
        
        // Como criar uma tabela através de uma query
        
        Connection conn = new ConnectionFactory().conexao();  // solicita uma conexão com o banco de dados
        
        String sql = "CREATE TABLE Clientes2(" +
                     "id bigint AUTO_INCREMENT NOT NULL," +
                     "nome nvarchar(150) NOT NULL," +
                     "endereco nvarchar(200)," +
                     "bairro nvarchar(50), PRIMARY KEY (id)" +
                     ")";
        
        
        try {
                        
            PreparedStatement comando = conn.prepareStatement(sql);                      
           
            comando.executeUpdate();  // <-- ATENÇÃO PARA O EXECUTE UPDATE !
            
            comando.close(); // fecha o Statement            
            conn.close();    // fecha a conexão com o banco de dados
            
            JOptionPane.showMessageDialog(null, "Tabela criada com sucesso !");  //  exibe uma caixa de mensagem
                        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao criar a tabela !\nERRO: " + ex.getMessage());  //  exibe uma caixa de mensagem
        }          
        
        
    }//GEN-LAST:event_jButton_createTableActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_conecta;
    private javax.swing.JButton jButton_createTable;
    private javax.swing.JButton jButton_delete;
    private javax.swing.JButton jButton_desconecta;
    private javax.swing.JButton jButton_fechar;
    private javax.swing.JButton jButton_insert;
    private javax.swing.JButton jButton_select;
    private javax.swing.JButton jButton_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
